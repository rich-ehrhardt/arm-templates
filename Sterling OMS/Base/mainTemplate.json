{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure location for resources"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "controlSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for the control subnet"
            }
        },
        "workerSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for the worker subnet"
            }
        },
        "endpointSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "CIDR for the endpoint subnet"
            }
        },
        "dataSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.3.0/24",
            "metadata": {
                "description": "CIDR for the data subnet"
            }
        },
        "devSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.4.0/24",
            "metadata": {
                "description": "CIDR for the development subnet"
            }
        },
        "bastionSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.5.0/24",
            "metadata": {
                "description": "CIDR for the bastion subnet"
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Admin user for created VMs"
            }
        },
        "adminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "Default admin password for VMs"
            }
        },
        "backupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "Number of days to retain backups"
            }
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "disabled",
            "metadata": {
                "description": "Use geo redundant backups or not for PostgreSQL service"
            }
        },
        "dbStorageSizeGB": {
            "type": "int",
            "defaultValue": 2048,
            "metadata": {
                "description": "Initial database size in GB"
            }
        },
        "dbVersion": {
            "type": "string",
            "defaultValue": "13",
            "metadata": {
                "description": "Version of PostgreSQL to install"
            }
        },
        "dbVMSize": {
            "type": "string",
            "defaultValue": "Standard_E16ds_v4",
            "metadata": {
                "description": "PostgreSQL VM Size"
            }
        },
        "dbEdition": {
            "type": "string",
            "defaultValue": "MemoryOptimized",
            "metadata": {
                "description": "PostgreSQL VM compute tier"
            }
        },
        "deployLogAnalytics": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy Log Analytics"
            }
        }
    },
    "variables": {
        "vnetName": "[concat(parameters('namePrefix'), '-vnet')]",
        "controlSubnetName": "[concat(parameters('namePrefix'), '-control-subnet')]",
        "workerSubnetName": "[concat(parameters('namePrefix'), '-worker-subnet')]",
        "endpointSubnetName": "[concat(parameters('namePrefix'), '-endpoint-subnet')]",
        "dataSubnetName": "[concat(parameters('namePrefix'), '-data-subnet')]",
        "devSubnetName": "[concat(parameters('namePrefix'),'-dev-subnet')]",
        "bastionSubnetName": "AzureBastionSubnet",
        "publicIpAddressName": "[concat(parameters('namePrefix'), '-bastion-public-ip')]",
        "bastionNSGName": "[concat(parameters('namePrefix'), '-bastion-nsg')]",
        "bastionHostName": "[concat(parameters('namePrefix'), '-bastion-vm')]",
        "privateDNSZoneName": "omspostgres.private.postgres.database.azure.com",
        "privateDNSLinkName": "[concat(variables('privateDNSZoneName'), '/', variables('privateDNSZoneName'), '-link')]",
        "postgreSQLName": "[concat(parameters('namePrefix'),'-postgresql')]",
        "dbDiagSettingsName": "[concat(variables('postgreSQLName'),'-diag-settings')]",
        "workspaceName": "[concat(parameters('namePrefix'), '-log-analytics-workspace')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-07-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetCIDR')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('controlSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('controlSubnetCIDR')]",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "[variables('workerSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workerSubnetCIDR')]"
                        }
                    },
                    {
                        "name": "[variables('endpointSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('endpointSubnetCIDR')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.ContainerRegistry"
                                }
                            ],
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "[variables('dataSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('dataSubnetCIDR')]",
                            "delegations": [
                                {
                                    "name": "Microsoft.DBPostgresSQL.flexibleServers",
                                    "properties": {
                                        "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('devSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('devSubnetCIDR')]"
                        }
                    },
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('bastionSubnetCIDR')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNSGName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNSGName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-07-01",
            "name": "[variables('bastionNSGName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHttpsInBound",
                        "properties": {
                            "priority": 120,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"                           
                        }
                    },
                    {
                        "name": "AllowGatewayManagerInbound",
                        "properties": {
                            "priority": 130,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "GatewayManager",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"    
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInbound",
                        "properties": {
                            "priority": 140,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"    
                        }
                    },
                    {
                        "name": "AllowBastionHostCommunication",
                        "properties": {
                            "priority": 150,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ]    
                        }
                    },
                    {
                        "name": "AllowSshRdpOutbound",
                        "properties": {
                            "priority": 100,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ]    
                        }
                    },
                    {
                        "name": "AllowAzureCloudOutbound",
                        "properties": {
                            "priority": 110,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "destinationPortRange": "443"    
                        }
                    },
                    {
                        "name": "AllowBastionCommunication",
                        "properties": {
                            "priority": 120,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ]    
                        }
                    },
                    {
                        "name": "AllowGetSessionInformation",
                        "properties": {
                            "priority": 130,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "Internet",
                            "destinationPortRange": "80"    
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2022-07-01",
            "name": "[variables('bastionHostName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateDNSZoneName')]",
            "location": "global",
            "properties": {},
            "dependsOn": [
                "[variables('vnetName')]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateDNSLinkName')]",
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZoneName'))]"
            ]
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2021-06-01",
            "name": "[variables('postgreSQLName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('dbVMSize')]",
                "tier": "[parameters('dbEdition')]"
            },
            "properties": {
                "administratorLogin": "[parameters('adminUserName')]",
                "administratorLoginPassword": "[parameters('adminPassword')]",
                "backup": {
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
                },
                "createMode": "Create",
                "highAvailability": {
                    "mode": "ZoneRedundant"
                },
                "network": {
                    "delegatedSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('dataSubnetName'))]",
                    "privateDnsZoneArmResourceId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZoneName'))]"
                },
                "storage": {
                    "storageSizeGB": "[parameters('dbStorageSizeGB')]"
                },
                "version": "[parameters('dbVersion')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]"
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2022-10-01",
            "name": "[variables('workspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                }
            }
        },
        {
            "type": "Microsoft.Insights/diagnosticSettings",
            "apiVersion": "2021-05-01-preview",
            "condition": "[parameters('deployLogAnalytics')]",
            "name": "[variables('dbDiagSettingsName')]",
            "scope": "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgreSQLName'))]",
            "properties": {
                "logAnalyticsDestinationType": "AzureDiagnostics",
                "logs": [
                    {
                        "category": "PostgreSQLLogs",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ],
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('workspaceName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgreSQLName'))]"
            ]
        }
    ]
}